name: AutoCodeSync

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # 检出目标仓库
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.ACCESS_TOKEN }}

      # 配置 Git
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git config --global pull.rebase true
          git config --global push.default current

      # 获取源仓库最新提交
      - name: Get source repository latest commit
        run: |
          git ls-remote https://github.com/Big-Yellow-J/Big-Yellow-J.github.io.git master | awk '{print $1}' > current_commit.txt
          echo "Current source commit: $(cat current_commit.txt)"

      # 检查更新
      - name: Check for updates
        id: check_updates
        run: |
          if [ -f .github/last_commit.txt ]; then
            LAST_COMMIT=$(cat .github/last_commit.txt)
            CURRENT_COMMIT=$(cat current_commit.txt)
            if [ "$LAST_COMMIT" != "$CURRENT_COMMIT" ]; then
              echo "New changes detected in source repository."
              echo "has_changes=true" >> $GITHUB_OUTPUT
            else
              echo "No changes detected in source repository."
              echo "has_changes=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "No last_commit.txt found, treating as first sync."
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      # 同步文件
      - name: Sync Python folders
        if: steps.check_updates.outputs.has_changes == 'true'
        run: |
          # 添加源仓库
          git remote add source https://github.com/Big-Yellow-J/Big-Yellow-J.github.io.git
          git fetch source
          
          # 重置本地分支（强制同步）
          git reset --hard origin/main
          
          # 获取子文件夹列表
          SUBFOLDERS=$(git ls-tree -d --name-only source/master code/Python 2>/dev/null || echo "")
          
          if [ -z "$SUBFOLDERS" ]; then
            echo "No subfolders found in code/Python."
            exit 0
          fi

          # 同步每个文件夹
          for folder in $SUBFOLDERS; do
            folder_name=$(basename "$folder")
            echo "Syncing folder: $folder_name"
            
            # 删除目标位置旧文件夹
            rm -rf "$folder_name"
            
            # 检出源文件夹
            git checkout source/master -- "code/Python/$folder_name"
            
            # 移动到根目录
            mv "code/Python/$folder_name" ./
          done

          # 清理残留
          rm -rf code

          # 更新提交记录
          mkdir -p .github
          cat current_commit.txt > .github/last_commit.txt
          git add .
          
          # 提交更改
          if ! git diff-index --quiet HEAD --; then
            git commit -m "Auto-sync from source (commit $(cat current_commit.txt))"
          fi

      # 推送更改
      - name: Push changes
        if: steps.check_updates.outputs.has_changes == 'true'
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          # 强制推送（覆盖远程）
          git push origin main --force