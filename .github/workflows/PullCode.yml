name: AutoCodeSync

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC
  workflow_dispatch: # Allows manual triggering

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # Checkout target repository with full history
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.ACCESS_TOKEN }}

      # Configure Git
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git config --global pull.rebase true
          git config --global push.default current

      # Get source repository latest commit
      - name: Get source repository latest commit
        run: |
          git ls-remote https://github.com/Big-Yellow-J/Big-Yellow-J.github.io.git master | awk '{print $1}' > current_commit.txt
          echo "Current source commit: $(cat current_commit.txt)"

      # Check for updates
      - name: Check for updates
        id: check_updates
        run: |
          if [ -f .github/last_commit.txt ]; then
            LAST_COMMIT=$(cat .github/last_commit.txt)
            CURRENT_COMMIT=$(cat current_commit.txt)
            if [ "$LAST_COMMIT" != "$CURRENT_COMMIT" ]; then
              echo "New changes detected in source repository."
              echo "has_changes=true" >> $GITHUB_OUTPUT
            else
              echo "No changes detected in source repository."
              echo "has_changes=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "No last_commit.txt found, treating as first sync."
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      # Sync files from source repository
      - name: Sync Python folders
        if: steps.check_updates.outputs.has_changes == 'true'
        run: |
          # Add source repository
          git remote add source https://github.com/Big-Yellow-J/Big-Yellow-J.github.io.git || true
          git fetch source

          # Reset to a clean state aligned with remote main
          git checkout main
          git reset --hard origin/main

          # Get list of subfolders in code/Python from source
          SUBFOLDERS=$(git ls-tree -d --name-only source/master code/Python 2>/dev/null || echo "")
          
          if [ -z "$SUBFOLDERS" ]; then
            echo "No subfolders found in code/Python."
            exit 0
          fi

          # Sync each folder
          for folder in $SUBFOLDERS; do
            folder_name=$(basename "$folder")
            echo "Syncing folder: $folder_name"
            
            # Remove old folder in target
            rm -rf "$folder_name"
            
            # Checkout folder from source
            git checkout source/master -- "code/Python/$folder_name"
            
            # Move folder to root
            mv "code/Python/$folder_name" ./
          done

          # Clean up residual code directory
          rm -rf code

          # Update commit record
          mkdir -p .github
          cat current_commit.txt > .github/last_commit.txt
          
          # Stage changes
          git add .
          
          # Commit changes if any
          if ! git diff-index --quiet HEAD --; then
            git commit -m "Auto-sync from source (commit $(cat current_commit.txt))"
          else
            echo "No changes to commit."
          fi

      # Push changes to target repository
      - name: Push changes
        if: steps.check_updates.outputs.has_changes == 'true'
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${ACCESS_TOKEN}@github.com/shangxiaaabb/ProjectCode.git
          git push origin main --force